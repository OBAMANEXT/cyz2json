name: Build Cyz2Json

on:
    push:
      tags:
        - 'v*'
    workflow_dispatch: # Allows manual triggering
      inputs:
        version:
          description: 'Version tag (e.g. v1.0.0)'
          required: true
          type: string
        reason:
          description: 'Reason for manual trigger'
          required: false
          default: 'Manual run'
jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [ubuntu-latest, windows-latest, macos-latest]
            
        steps:
        - uses: actions/checkout@v3
        
        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
                dotnet-version: '8.0.x'
        
        - name: Restore dependencies
          run: dotnet restore
        
        - name: Build
          run: dotnet build --configuration Release --no-restore
        
        - name: Set RID
          id: set-rid
          run: |
            if [ "${{ matrix.os }}" == "windows-latest" ]; then
              echo "rid=win-x64" >> $GITHUB_OUTPUT
            elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
              echo "rid=linux-x64" >> $GITHUB_OUTPUT
            elif [ "${{ matrix.os }}" == "macos-latest" ]; then
              echo "rid=osx-x64" >> $GITHUB_OUTPUT
            fi
          shell: bash
        
        - name: Publish
          run: dotnet publish Cyz2Json/Cyz2Json.csproj -c Release --self-contained true
                
        - name: Copy License File
          run: cp LICENSE.txt Cyz2Json/bin/Release/net8.0/*/publish/ # Assuming LICENSE is at the root

        - name: Zip Release Files
          run: zip -r cyz2json-${{ matrix.os }}.zip ./Cyz2Json/bin/Release/net8.0/*/*/
          shell: bash

        - name: Get release
          id: get_release
          uses: octokit/request-action@v2.x
          with:
            route: GET /repos/{owner}/{repo}/releases/tags/{tag}
            owner: ${{ github.repository_owner }}
            repo: ${{ github.event.repository.name }}
            tag: ${{ github.event.inputs.version || github.ref_name }}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        - name: Create Release
          if: steps.get_release.outputs.status == '404'  # Create if release doesn't exist
          id: create_release
          uses: actions/create-release@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Required for creating releases, Using the built-in token
          with:
              tag_name: ${{ github.event.inputs.version || github.ref_name }}   # Use the pushed tag as release name
              release_name: Release ${{ github.event.inputs.version || github.ref_name }} # Use github.ref_name here as well
              body: |
                Automatic release created by GitHub Actions.
              draft: false                         # Set to true for draft releases
              prerelease: false                     # Set to true for pre-releases

        - name: Update Release
          if: steps.get_release.outputs.status == '200'  # Update if release exists
          uses: actions/update-release@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              release_id: ${{ steps.get_release.outputs.id }}
              tag_name: ${{ github.event.inputs.version || github.ref_name }}
              release_name: Release ${{ github.event.inputs.version || github.ref_name }}
              body: ${{ github.event.inputs.reason }}
              draft: false
              prerelease: false
    
        - name: Upload Release Asset # Upload regardless of create/update
          uses: actions/upload-release-asset@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              upload_url: ${{ steps.create_release.outputs.upload_url  || steps.update_release.outputs.upload_url }}
              asset_path: cyz2json-${{ matrix.os }}.zip    # Path to the ZIP file
              asset_name: cyz2json-${{ matrix.os }}.zip    # Name of the asset on the release page
              asset_content_type: application/zip # Correct content type

        # - name: Upload Release
        #   uses: softprops/action-gh-release@v1
        #   with:
        #     files: cyz2json-${{ matrix.os }}.zip
        #     tag_name: ${{ github.event.inputs.version || github.ref_name }}
        #     name: Release ${{ github.event.inputs.version || github.ref_name }}
        #     body: ${{ github.event.inputs.reason }}
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}