name: Build Cyz2Json

on:
    push:
        tags:
            - 'v*'

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [ubuntu-latest, windows-latest, macos-latest]
            
        steps:
        - uses: actions/checkout@v3
        
        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
                dotnet-version: '8.0.x'
        
        - name: Restore dependencies
          run: dotnet restore
        
        - name: Build
          run: dotnet build --configuration Release --no-restore
        
        - name: Set RID
          id: set-rid
          run: |
            if [ "${{ matrix.os }}" == "windows-latest" ]; then
              echo "rid=win-x64" >> $GITHUB_OUTPUT
            elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
              echo "rid=linux-x64" >> $GITHUB_OUTPUT
            elif [ "${{ matrix.os }}" == "macos-latest" ]; then
              echo "rid=osx-x64" >> $GITHUB_OUTPUT
            fi
          shell: bash
        
        - name: Publish
          run: dotnet publish Cyz2Json/Cyz2Json.csproj -c Release --self-contained true
                
        - name: Copy License File
          run: cp LICENSE.txt Cyz2Json/bin/Release/net8.0/${{ steps.set-rid.outputs.rid }}/publish/ # Assuming LICENSE is at the root

        - name: Zip Release Files
          run: zip -r cyz2json-${{ matrix.os }}.zip ./Cyz2Json/bin/Release/net8.0/*/*
          shell: bash

        - name: Create Release
          uses: actions/create-release@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Required for creating releases
          with:
              tag_name: ${{ github.ref_name }}   # Use the pushed tag as release name
              release_name: Release ${{ github.ref_name }} # Use github.ref_name here as well
              body: |
                Automatic release created by GitHub Actions.
              draft: false                         # Set to true for draft releases
              prerelease: false                     # Set to true for pre-releases

        - name: Upload Release Asset
          uses: actions/upload-release-asset@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: cyz2json-${{ matrix.os }}.zip    # Path to the ZIP file
              asset_name: cyz2json-${{ matrix.os }}.zip    # Name of the asset on the release page
              asset_content_type: application/zip # Correct content type

